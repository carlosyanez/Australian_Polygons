shiny::runApp()
runApp()
thematic_on(bg = "#222222", fg = "white", accent = "#0CE3AC", font = "Oxanium")
thematic::thematic_on(bg = "#222222", fg = "white", accent = "#0CE3AC", font = "Oxanium")
library(ggplot2)
ggplot(mtcars, aes(wt, mpg, label = rownames(mtcars), color = factor(cyl))) +
geom_point() +
ggrepel::geom_text_repel()
thematic::thematic_on(bg = "#222222", fg = "white", accent = "#0CE3AC", font = "Titillium")
library(ggplot2)
ggplot(mtcars, aes(wt, mpg, label = rownames(mtcars), color = factor(cyl))) +
geom_point() +
ggrepel::geom_text_repel()
thematic::thematic_on(bg = "#222222", fg = "white", accent = "#0CE3AC", font = "Titillium",
qualitative = RColorBrewer::brewer.pal(8, "Dark2"))
library(ggplot2)
ggplot(mtcars, aes(wt, mpg, label = rownames(mtcars), color = factor(cyl))) +
geom_point() +
ggrepel::geom_text_repel()
runApp()
runApp()
install.packages("rbokeh")
pacman::p_load("tidyverse","ggplot2","plotly","ggalt","trelliscopejs")
my_theme <- theme_set(theme_minimal())
my_theme <- theme_update()
thematic::thematic_rmd(font="Roboto")
pacman::p_load("tidyverse","ggplot2","plotly","ggalt","trelliscopejs")
my_theme <- theme_set(theme_minimal())
my_theme <- theme_update()
theme_set(my_theme)
thematic::thematic_rmd(font="Roboto")
source("data_load.R")
partidos_comuna <- resultados2017_analisis$partidos %>%
left_join(partidos,by="Partido") %>% mutate(Partido=Partido_Corrected) %>%
select(-Partido_Corrected,-Posicion_Plebiscito) %>%
group_by(Comuna) %>% arrange(desc(Votos)) %>% slice_head() %>% ungroup()
plebiscito2020 %>%
select(Comuna,Comuna_Servel,Region,codregion,Participacion_per) %>%
left_join(resultados2017_analisis$participacion %>% select(Comuna_Servel=Comuna,participacion_2017),
by="Comuna_Servel") %>%
left_join(partidos_comuna %>% select(-Votos), by=c("Comuna_Servel"="Comuna")) %>%
mutate(delta=Participacion_per-participacion_2017) %>%
ggplot(aes(x=participacion_2017,y=Participacion_per)) +
geom_point() +
geom_abline(slope=1,intercept = 0) +
facet_wrap(~Partido)
pacman::p_load("tidyverse","ggplot2","plotly","ggalt","trelliscopejs")
my_theme <- theme_set(theme_minimal())
my_theme <- theme_update()
theme_set(my_theme)
thematic::thematic_rmd(font="Pacifico")
partidos_comuna <- resultados2017_analisis$partidos %>%
left_join(partidos,by="Partido") %>% mutate(Partido=Partido_Corrected) %>%
select(-Partido_Corrected,-Posicion_Plebiscito) %>%
group_by(Comuna) %>% arrange(desc(Votos)) %>% slice_head() %>% ungroup()
plebiscito2020 %>%
select(Comuna,Comuna_Servel,Region,codregion,Participacion_per) %>%
left_join(resultados2017_analisis$participacion %>% select(Comuna_Servel=Comuna,participacion_2017),
by="Comuna_Servel") %>%
left_join(partidos_comuna %>% select(-Votos), by=c("Comuna_Servel"="Comuna")) %>%
mutate(delta=Participacion_per-participacion_2017) %>%
ggplot(aes(x=participacion_2017,y=Participacion_per)) +
geom_point() +
geom_abline(slope=1,intercept = 0) +
facet_wrap(~Partido)
pacman::p_load("tidyverse","ggplot2","plotly","ggalt","trelliscopejs","thematic")
my_theme <- theme_set(theme_minimal())
my_theme <- theme_update()
theme_set(my_theme)
#thematic_rmd(font="Pacifico")
thematic_on()
partidos_comuna <- resultados2017_analisis$partidos %>%
left_join(partidos,by="Partido") %>% mutate(Partido=Partido_Corrected) %>%
select(-Partido_Corrected,-Posicion_Plebiscito) %>%
group_by(Comuna) %>% arrange(desc(Votos)) %>% slice_head() %>% ungroup()
plebiscito2020 %>%
select(Comuna,Comuna_Servel,Region,codregion,Participacion_per) %>%
left_join(resultados2017_analisis$participacion %>% select(Comuna_Servel=Comuna,participacion_2017),
by="Comuna_Servel") %>%
left_join(partidos_comuna %>% select(-Votos), by=c("Comuna_Servel"="Comuna")) %>%
mutate(delta=Participacion_per-participacion_2017) %>%
ggplot(aes(x=participacion_2017,y=Participacion_per)) +
geom_point() +
geom_abline(slope=1,intercept = 0) +
facet_wrap(~Partido)
pacman::p_load("tidyverse","ggplot2","plotly","ggalt","trelliscopejs","thematic")
my_theme <- theme_set(theme_minimal())
my_theme <- theme_update()
theme_set(my_theme)
thematic_rmd(font="Pacifico")
#thematic_on()
partidos_comuna <- resultados2017_analisis$partidos %>%
left_join(partidos,by="Partido") %>% mutate(Partido=Partido_Corrected) %>%
select(-Partido_Corrected,-Posicion_Plebiscito) %>%
group_by(Comuna) %>% arrange(desc(Votos)) %>% slice_head() %>% ungroup()
plebiscito2020 %>%
select(Comuna,Comuna_Servel,Region,codregion,Participacion_per) %>%
left_join(resultados2017_analisis$participacion %>% select(Comuna_Servel=Comuna,participacion_2017),
by="Comuna_Servel") %>%
left_join(partidos_comuna %>% select(-Votos), by=c("Comuna_Servel"="Comuna")) %>%
mutate(delta=Participacion_per-participacion_2017) %>%
ggplot(aes(x=participacion_2017,y=Participacion_per)) +
geom_point() +
geom_abline(slope=1,intercept = 0) +
facet_wrap(~Partido)
pacman::p_load("tidyverse","ggplot2","plotly","ggalt","trelliscopejs","thematic")
my_theme <- theme_set(theme_minimal())
my_theme <- theme_update()
theme_set(my_theme)
thematic_rmd(font="Titillium Web")
#thematic_on()
partidos_comuna <- resultados2017_analisis$partidos %>%
left_join(partidos,by="Partido") %>% mutate(Partido=Partido_Corrected) %>%
select(-Partido_Corrected,-Posicion_Plebiscito) %>%
group_by(Comuna) %>% arrange(desc(Votos)) %>% slice_head() %>% ungroup()
plebiscito2020 %>%
select(Comuna,Comuna_Servel,Region,codregion,Participacion_per) %>%
left_join(resultados2017_analisis$participacion %>% select(Comuna_Servel=Comuna,participacion_2017),
by="Comuna_Servel") %>%
left_join(partidos_comuna %>% select(-Votos), by=c("Comuna_Servel"="Comuna")) %>%
mutate(delta=Participacion_per-participacion_2017) %>%
ggplot(aes(x=participacion_2017,y=Participacion_per)) +
geom_point() +
geom_abline(slope=1,intercept = 0) +
facet_wrap(~Partido)
pacman::p_load("tidyverse","ggplot2","plotly","ggalt","trelliscopejs")
my_theme <- theme_set(theme_minimal())
my_theme <- theme_update()
theme_set(my_theme)
#thematic_rmd(font="Titillium Web")
#thematic_on()
partidos_comuna <- resultados2017_analisis$partidos %>%
left_join(partidos,by="Partido") %>% mutate(Partido=Partido_Corrected) %>%
select(-Partido_Corrected,-Posicion_Plebiscito) %>%
group_by(Comuna) %>% arrange(desc(Votos)) %>% slice_head() %>% ungroup()
plebiscito2020 %>%
select(Comuna,Comuna_Servel,Region,codregion,Participacion_per) %>%
left_join(resultados2017_analisis$participacion %>% select(Comuna_Servel=Comuna,participacion_2017),
by="Comuna_Servel") %>%
left_join(partidos_comuna %>% select(-Votos), by=c("Comuna_Servel"="Comuna")) %>%
mutate(delta=Participacion_per-participacion_2017) %>%
ggplot(aes(x=participacion_2017,y=Participacion_per)) +
geom_point() +
geom_abline(slope=1,intercept = 0) +
facet_wrap(~Partido)
devtools::install_github("nevrome/wellspell.addin")
install.packages("hunspell")
devtools::install_github("nevrome/LanguageToolR")
LanguageToolR::lato_quick_setup()
wellspell.addin:::gramcheck()
wellspell.addin:::gramcheck()
wellspell.addin:::gramcheck()
x_bar <-  1.1692935
s_2   <-  0.8708521
n <- 19
t_0975 <- qt(0.975,n-1)
s      <-  sqrt(s_2)
round(x_bar + c(-1,1)*t_0975*s/sqrt(n),3)
lower_bound <- 0.02250397
upper_bound <- 0.45124552
point_estimate<- (lower_bound + upper_bound)/2
round(point_estimate,2)
r2 <- sxy^2/(sxx*syy)
#Question 3
x_bar = 131.00
y_bar= 28.3
sxx = 262
syy= 44.38
sxy = 103.9
r2 <- sxy^2/(sxx*syy)
round(r2,4)
Height <-c(129,140,	124,	123,	139)
Weight <-c(28.6,	31.8,	26.1,	23.9,	31.1)
mean(Height)
mean(Weight)
corr(Height.weight)
r <- sxy/sqrt(sxx*syy)
round(r2,4)
r <- sxy/sqrt(sxx*syy)
round(r2,4)
r <- sxy/sqrt(sxx*syy)
round(r,4)
cor(Height,Weight)
h_body<-0.55 #kg
beta_0 <- 2.09971
beta_1<- 0.76271
log_h_brain <- beta_0 + beta_1*log(h_body)
exp(log_h_brain)
round(exp(log_h_brain),4)
#Question 4
beta_1_estimate <- 1.9900
beta_1_s_error <- 0.3921
#h_0 =2
t_value <- (beta_1_estimate -2)/beta_1_s_error
t_value
beta_1_estimate <- 1.9900
beta_1_s_error <- 0.3921
d_freedom <- 27
b_interval <- beta_1_estimate + c(1,-1)*t_0975*beta_1_s_error
t_0975 <- qt(0.975,d_freedom)
b_interval <- beta_1_estimate + c(1,-1)*t_0975*beta_1_s_error
round(b_interval,2)
b_interval <- beta_1_estimate + c(-1,1)*t_0975*beta_1_s_error
round(b_interval,2)
XTX_inv <- matrix(data=c( 5.6539155, -0.61660531, -0.72676694,
-0.6166053,  0.21285205, -0.01481414,
-0.7267669 -0.01481414  0.15553155),nrow=3,ncol=3)
XTX_inv <- matrix(data=c( 5.6539155, -0.61660531, -0.72676694,
-0.6166053,  0.21285205, -0.01481414,
-0.7267669, -0.01481414,  0.15553155)
XTX_inv
matrix(data=c( 5.6539155, -0.61660531, -0.72676694,
-0.6166053,  0.21285205, -0.01481414,
-0.7267669, -0.01481414,  0.15553155),nrow=3,ncol=3)
XTX_inv <- matrix(data=c( 5.6539155, -0.61660531, -0.72676694,
-0.6166053,  0.21285205, -0.01481414,
-0.7267669, -0.01481414,  0.15553155),nrow=3,ncol=3)
XTX_inv
t_stat <- (beta_1_estimate -2)/beta_1_s_error
t_stat
h_body<-0.55 #kg
beta_0 <- 2.09971
beta_1<- 0.76271
SER <- 0.6631
n <- 45
p <- 2
TSS <- 271.2082
SSR <- SER^2*(n-p)
R2 <- 1 - SSR/TSS
round(R2,4)
t_value <- 23.95
t_value_beta_1 <- 23.95
#t = X_bar - X_true /(se)
se_beta_1 <- (beta_1-0)/t_value_beta_1
round(se_beta_1,5)
t_value_beta_0 <- (beta_0-0)/se_beta_0
round(t_value_beta_0,5)
se_beta_0
se_beta_0<-0.10869
t_value_beta_0 <- (beta_0-0)/se_beta_0
round(t_value_beta_0,5)
beta_0_estimate <-12.9398
beta_1_estimate <- 1.9900
beta_2_estimate <- 3.5793
beta_0_s_error <-  2.0209
beta_1_s_error <- 0.3921
beta_2_s_error <- 0.3352
d_freedom <- 27
XTX_inv <- matrix(data=c( 5.6539155, -0.61660531, -0.72676694,
-0.6166053,  0.21285205, -0.01481414,
-0.7267669, -0.01481414,  0.15553155),nrow=3,ncol=3)
#h_0 =2
t_stat <- (beta_1_estimate -2)/beta_1_s_error
t_stat
?qt
pt(t_stat, 27)
t_stat
2*pt(-abs(t_stat),df=27)
2*pt(-abs(t_stat),df=27)
pvalue <- 2*pt(-abs(t_stat),df=27)
round(pvalue,4)
t_stat
round(t_stat,4)
b <- matrix(c(1,4,6),ncol=1)
b
XTX_inv <- matrix(data=c( 5.6539155, -0.61660531, -0.72676694,
-0.6166053,  0.21285205, -0.01481414,
-0.7267669, -0.01481414,  0.15553155),nrow=3,ncol=3)
t(b)
t_0975 <- qt(0.975,d_freedom)
b <- matrix(c(1,4,6),ncol=1)
beta_hat <- matrix(c(beta_0_estimate,beta_1_estimate,beta_2_estimate),ncol=1)
RSS <- 0.722 # from annova table
t(b)*beta_hat +c(-1,1)*t_0975*sqrt((RSS/d_freedom)*t(b)*XTX_inv*solve(b))
beta_hat
t(b)
t(b)*beta_hat
pred_interal <- t(b)%*%beta_hat +c(-1,1)*t_0975*sqrt((RSS/d_freedom)*t(b)%*%XTX_inv%*%solve(b))
solve(b)
pred_interal <- t(b)%*%beta_hat +c(-1,1)*t_0975*sqrt((RSS/d_freedom)*t(b)%*%XTX_inv%*%b)
t(b)%*%XTX_inv%*%b
(RSS/d_freedom)*t(b)%*%XTX_inv%*%b
sqrt((RSS/d_freedom)*t(b)%*%XTX_inv%*%b)
t_0975*sqrt((RSS/d_freedom)*t(b)%*%XTX_inv%*%b)
t(b)%*%beta_hat
t_0975*sqrt((RSS/d_freedom)*t(b)%*%XTX_inv%*%b)
c(-1,1)*t_0975*sqrt((RSS/d_freedom)*t(b)%*%XTX_inv%*%b)
pred_interal
round(pred_interal,4)
pred_interal <- t(b)%*%beta_hat + c(-1,1)*t_0975*sqrt((RSS/d_freedom)*(1+t(b)%*%XTX_inv%*%b))
round(pred_interal,4)
round(pred_interal,2)
Height <-c(129,140,	124,	123,	139)
Weight <-c(28.6,	31.8,	26.1,	23.9,	31.1)
x_bar = 131.00
y_bar= 28.3
sxx = 262
syy= 44.38
sxy = 103.9
r <- sxy/sqrt(sxx*syy)
round(r,4)
cor(Height,Weight)
beta_0_estimate <-12.9398
beta_1_estimate <- 1.9900
beta_2_estimate <- 3.5793
beta_0_s_error <-  2.0209
beta_1_s_error <- 0.3921
beta_2_s_error <- 0.3352
d_freedom <- 27
XTX_inv <- matrix(data=c( 5.6539155, -0.61660531, -0.72676694,
-0.6166053,  0.21285205, -0.01481414,
-0.7267669, -0.01481414,  0.15553155),nrow=3,ncol=3)
XTX_inv <- matrix(data=c( 5.6539155, -0.61660531, -0.72676694,
-0.6166053,  0.21285205, -0.01481414,
-0.7267669, -0.01481414,  0.15553155),nrow=3,ncol=3)
XTX_inv
t_stat <- (beta_1_estimate -2)/beta_1_s_error
round(t_stat,4)
pvalue <- 2*pt(-abs(t_stat),df=27)
round(pvalue,4)
t_0975 <- qt(0.975,d_freedom)
b_interval <- beta_1_estimate + c(-1,1)*t_0975*beta_1_s_error
round(b_interval,2)
b <- matrix(c(1,4,6),ncol=1)
beta_hat <- matrix(c(beta_0_estimate,beta_1_estimate,beta_2_estimate),ncol=1)
RSS <- 0.722 # from annova table
pred_interal <- t(b)%*%beta_hat + c(-1,1)*t_0975*sqrt((RSS/d_freedom)*(1+t(b)%*%XTX_inv%*%b))
round(pred_interal,2)
#hedgehog's brain
h_body<-0.55 #kg
beta_0 <- 2.09971
beta_1<- 0.76271
SER <- 0.6631
se_beta_0<-0.10869
n <- 45
p <- 2
t_value_beta_1 <- 23.95
TSS <- 271.2082
#hedgehog's brain
h_body<-0.55 #kg
beta_0 <- 2.09971
beta_1<- 0.76271
SER <- 0.6631
se_beta_0<-0.10869
n <- 45
p <- 2
t_value_beta_1 <- 23.95
TSS <- 271.2082
SSR <- SER^2*(n-p)
R2 <- 1 - SSR/TSS
round(R2,4)
se_beta_1 <- (beta_1-0)/t_value_beta_1
round(se_beta_1,5)
round(se_beta_1,4)
t_value_beta_0 <- (beta_0-0)/se_beta_0
round(t_value_beta_0,4)
log_h_brain <- beta_0 + beta_1*log(h_body)  #log(g)
round(exp(log_h_brain),4)
beta_1*log(h_body)
setwd("~/Google Drive/GitHub/Australian_Polygons")
lga_loc_poa <- readRDS("~/Google Drive/GitHub/Australian_Polygons/nsw/lga_loc_poa.rds")
pacman::p_load("tidyverse","rgdal","sf","lwgeom","spdep","geojsonsf","rgeos","smoothr",
"rvest","xml2","stringi","units","absmapsdata")
locs <- loc_lga_poa %>%
group_by(LOC_PID,LOCALITY,State.Region,Metro.Region,State) %>%
summarise(.groups="drop")
lgas <- loc_lga_poa %>%
group_by(LGA_PID,LGA,State.Region,Metro.Region,State) %>%
summarise(.groups="drop")
poas <- loc_lga_poa %>%
group_by(POA_CODE16,State.Region,Metro.Region,State) %>%
summarise(.groups="drop")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
pacman::p_load("tidyverse","rgdal","sf","lwgeom","spdep","geojsonsf","rgeos","smoothr",
"rvest","xml2","stringi","units","absmapsdata")
lgas <- loc_lga_poa %>%
group_by(LGA_PID,LGA,State.Region,Metro.Region,State) %>%
summarise(.groups="drop")
View(lga_loc_poa)
loc_lga_poa <- lga_loc_poa
lgas <- loc_lga_poa %>%
group_by(LGA_PID,LGA,State.Region,Metro.Region,State) %>%
summarise(.groups="drop")
rm("lga_loc_poa")
saveRDS(lgas,str_c(State_folder,"lgas.rds"))
State_folder <- "nsw/"
saveRDS(lgas,str_c(State_folder,"lgas.rds"))
locs <- loc_lga_poa %>%
group_by(LOC_PID,LOCALITY,State.Region,Metro.Region,State) %>%
summarise(.groups="drop")
saveRDS(locs,str_c(State_folder,"locs.rds"))
poas <- loc_lga_poa %>%
group_by(POA_CODE16,State.Region,Metro.Region,State) %>%
summarise(.groups="drop")
saveRDS(poas,str_c(State_folder,"poas.rds"))
rm(poas,locs)
regions <-lgas %>%
group_by(State.Region) %>%
summarise(.groups="drop")  %>%
st_cast("MULTILINESTRING") %>% st_cast("LINESTRING") %>%
st_collection_extract("LINESTRING") %>%
st_polygonize() %>%
mutate(AREA=st_area(.), RELEVANT=(AREA>area_tolerance)) %>%
filter(RELEVANT) %>%
group_by(State.Region) %>%
summarise(.groups="drop")
## get list of  councils across state
area_tolerance <-set_units(10^4,m^2)
regions <-lgas %>%
group_by(State.Region) %>%
summarise(.groups="drop")  %>%
st_cast("MULTILINESTRING") %>% st_cast("LINESTRING") %>%
st_collection_extract("LINESTRING") %>%
st_polygonize() %>%
mutate(AREA=st_area(.), RELEVANT=(AREA>area_tolerance)) %>%
filter(RELEVANT) %>%
group_by(State.Region) %>%
summarise(.groups="drop")
state <- regions %>%
group_by(State) %>%
summarise(.groups="drop")  %>%
st_cast("MULTILINESTRING") %>% st_cast("LINESTRING") %>%
st_collection_extract("LINESTRING") %>%
st_polygonize() %>%
mutate(AREA=st_area(.), RELEVANT=(AREA>area_tolerance)) %>%
filter(RELEVANT) %>%
group_by(State) %>%
summarise(.groups="drop")
regions <-lgas %>%
group_by(State,State.Region) %>%
summarise(.groups="drop")  %>%
st_cast("MULTILINESTRING") %>% st_cast("LINESTRING") %>%
st_collection_extract("LINESTRING") %>%
st_polygonize() %>%
mutate(AREA=st_area(.), RELEVANT=(AREA>area_tolerance)) %>%
filter(RELEVANT) %>%
group_by(State,State.Region) %>%
summarise(.groups="drop")
state <- regions %>%
group_by(State) %>%
summarise(.groups="drop")  %>%
st_cast("MULTILINESTRING") %>% st_cast("LINESTRING") %>%
st_collection_extract("LINESTRING") %>%
st_polygonize() %>%
mutate(AREA=st_area(.), RELEVANT=(AREA>area_tolerance)) %>%
filter(RELEVANT) %>%
group_by(State) %>%
summarise(.groups="drop")
plot(state %>% select(State))
saveRDS(state,str_c(State_folder,"state.rds"))
