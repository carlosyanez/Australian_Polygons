State.Region="Greater Metropolitan Melbourne")
View(melb_lgas_list)
barwon_lgas_list <- read_html("https://en.wikipedia.org/wiki/Local_government_areas_of_Victoria#Municipalities_of_Greater_Melbourne") %>%
html_node(xpath="/html/body/div[3]/div[3]/div[5]/div[1]/table[2]") %>%
html_table(fill = TRUE) %>%
.[!duplicated(as.list(.))] %>%
slice(-1) %>%
rename(LGA=`Local government area`) %>%
clean_lga() %>%
dplyr::select(LGA,Population) %>%
mutate(ABB_NAME=toupper(LGA),
State.Region="Barwon South West",
Metro.Region="")
View(barwon_lgas_list)
lgas_list <- map_dfr(2:6, function(x,regions){
read_html("https://en.wikipedia.org/wiki/Local_government_areas_of_Victoria") %>%
html_node(xpath=str_c("/html/body/div[3]/div[3]/div[5]/div[1]/table[",x,"]")) %>%
html_table(fill = TRUE) %>%
.[!duplicated(as.list(.))] %>%
slice(-1) %>%
rename(LGA=`Local government area`) %>%
clean_lga() %>%
dplyr::select(LGA,Population) %>%
mutate(ABB_NAME=toupper(LGA),
State.Region=regions[x],
Metro.Region="")
})
regions <- c("Barwon South West","Grampians",
"Gippsland","Hume","Loddon Mallee")
lgas_list <- map_dfr(2:6, function(x,regions){
read_html("https://en.wikipedia.org/wiki/Local_government_areas_of_Victoria") %>%
html_node(xpath=str_c("/html/body/div[3]/div[3]/div[5]/div[1]/table[",x,"]")) %>%
html_table(fill = TRUE) %>%
.[!duplicated(as.list(.))] %>%
slice(-1) %>%
rename(LGA=`Local government area`) %>%
clean_lga() %>%
dplyr::select(LGA,Population) %>%
mutate(ABB_NAME=toupper(LGA),
State.Region=regions[x],
Metro.Region="")
})
regions <- c("Barwon South West","Grampians",
"Gippsland","Hume","Loddon Mallee")
lgas_list <- map_dfr(2:6, function(x,regions){
read_html("https://en.wikipedia.org/wiki/Local_government_areas_of_Victoria") %>%
html_node(xpath=str_c("/html/body/div[3]/div[3]/div[5]/div[1]/table[",x,"]")) %>%
html_table(fill = TRUE) %>%
.[!duplicated(as.list(.))] %>%
slice(-1) %>%
rename(LGA=`Local government area`) %>%
clean_lga() %>%
dplyr::select(LGA,Population) %>%
mutate(ABB_NAME=toupper(LGA),
State.Region=regions[x-1],
Metro.Region="")
})
lgas_list <- map_dfr(2:6, function(x,regions){
read_html("https://en.wikipedia.org/wiki/Local_government_areas_of_Victoria") %>%
html_node(xpath=str_c("/html/body/div[3]/div[3]/div[5]/div[1]/table[",x,"]")) %>%
html_table(fill = TRUE) %>%
.[!duplicated(as.list(.))] %>%
slice(-1) %>%
rename(LGA=`Local government area`) %>%
clean_lga() %>%
dplyr::select(LGA,Population) %>%
mutate(ABB_NAME=toupper(LGA),
State.Region=regions[x-1],
Metro.Region="")
},regions)
View(lgas_list)
lgas_list <- rbind(lgas_list,melb_lgas_list)
lgas_list <- rbind(lgas_list,melb_lgas_list)
lgas_list <- rbind(lgas_list,melb_lgas_list)
View(barwon_lgas_list)
View(melb_lgas_list)
melb_lgas_list <- read_html("https://en.wikipedia.org/wiki/Local_government_areas_of_Victoria") %>%
html_node(xpath="/html/body/div[3]/div[3]/div[5]/div[1]/table[1]") %>%
html_table(fill = TRUE) %>%
rename(LGA=`Local government area`,
Population=`Population (2018)[1][2]`,
Metro.Region=Region) %>%
clean_lga() %>%
dplyr::select(LGA,Population,Metro.Region) %>%
mutate(ABB_NAME=toupper(LGA),
State.Region="Greater Metropolitan Melbourne")
regions <- c("Barwon South West","Grampians",
"Gippsland","Hume","Loddon Mallee")
lgas_list <- map_dfr(2:6, function(x,regions){
read_html("https://en.wikipedia.org/wiki/Local_government_areas_of_Victoria") %>%
html_node(xpath=str_c("/html/body/div[3]/div[3]/div[5]/div[1]/table[",x,"]")) %>%
html_table(fill = TRUE) %>%
.[!duplicated(as.list(.))] %>%
slice(-1) %>%
rename(LGA=`Local government area`) %>%
clean_lga() %>%
dplyr::select(LGA,Population) %>%
mutate(ABB_NAME=toupper(LGA),
State.Region=regions[x-1],
Metro.Region="")
},regions)
lgas_list <- rbind(lgas_list,melb_lgas_list)
View(lgas_list)
rm(regions,melb_lgas_list)
regions <- c("Greater Metropolitan Melbourne","Barwon South West","Grampians",
"Gippsland","Hume","Loddon Mallee")
wiki_page <- read_html("https://en.wikipedia.org/wiki/Local_government_areas_of_Victoria")
clean_lga <-function(df){
df %>%   mutate(LGA=str_remove(LGA,"City of"),
LGA=str_remove(LGA,"Shire of"),
LGA=str_remove(LGA,"Shire"),
LGA=str_remove(LGA,"Borough of"),
LGA=str_squish(LGA),
LGA=str_trim(LGA))
}
#table for melbourne is different....
melb_lgas_list <- wiki_page %>%
html_node(xpath="/html/body/div[3]/div[3]/div[5]/div[1]/table[1]") %>%
html_table(fill = TRUE) %>%
rename(LGA=`Local government area`,
Population=`Population (2018)[1][2]`,
Metro.Region=Region) %>%
clean_lga() %>%
dplyr::select(LGA,Population,Metro.Region) %>%
mutate(ABB_NAME=toupper(LGA),
State.Region=regions[1])
# other regions
lgas_list <- map_dfr(2:6, function(x,regions,wiki_page){
wiki_page %>%
html_node(xpath=str_c("/html/body/div[3]/div[3]/div[5]/div[1]/table[",x,"]")) %>%
html_table(fill = TRUE) %>%
.[!duplicated(as.list(.))] %>%
slice(-1) %>%
rename(LGA=`Local government area`) %>%
clean_lga() %>%
dplyr::select(LGA,Population) %>%
mutate(ABB_NAME=toupper(LGA),
State.Region=regions[x],
Metro.Region="")
},regions,wiki_page)
# put together and clean up
lgas_list <- rbind(lgas_list,melb_lgas_list)
rm(regions,melb_lgas_list,wiki_page,clean_lga)
View(lgas_list)
setwd("~/Google Drive/GitHub/Australian_Polygons")
# Load/Install pacman
if(!require(pacman)) install.packages("pacman", repos = "http://cran.us.r-project.org")
#use pacman to install all other packages
pacman::p_load("tidyverse","spdplyr","sp","rgdal","raster","maptools","geojsonio",
"rvest","xml2")
## get list of  councils across state
regions <- c("Greater Metropolitan Melbourne","Barwon South West","Grampians",
"Gippsland","Hume","Loddon Mallee")
wiki_page <- read_html("https://en.wikipedia.org/wiki/Local_government_areas_of_Victoria")
clean_lga <-function(df){
df %>%   mutate(LGA=str_remove(LGA,"City of"),
LGA=str_remove(LGA,"Shire of"),
LGA=str_remove(LGA,"Shire"),
LGA=str_remove(LGA,"Borough of"),
LGA=str_squish(LGA),
LGA=str_trim(LGA))
}
#table for melbourne is different....
melb_lgas_list <- wiki_page %>%
html_node(xpath="/html/body/div[3]/div[3]/div[5]/div[1]/table[1]") %>%
html_table(fill = TRUE) %>%
rename(LGA=`Local government area`,
Population=`Population (2018)[1][2]`,
Metro.Region=Region) %>%
clean_lga() %>%
dplyr::select(LGA,Population,Metro.Region) %>%
mutate(ABB_NAME=toupper(LGA),
State.Region=regions[1])
# other regions
lgas_list <- map_dfr(2:6, function(x,regions,wiki_page){
wiki_page %>%
html_node(xpath=str_c("/html/body/div[3]/div[3]/div[5]/div[1]/table[",x,"]")) %>%
html_table(fill = TRUE) %>%
.[!duplicated(as.list(.))] %>%
slice(-1) %>%
rename(LGA=`Local government area`) %>%
clean_lga() %>%
dplyr::select(LGA,Population) %>%
mutate(ABB_NAME=toupper(LGA),
State.Region=regions[x],
Metro.Region="")
},regions,wiki_page)
# put together and clean up
lgas_list <- rbind(lgas_list,melb_lgas_list)
rm(regions,melb_lgas_list,wiki_page,clean_lga)
#Download all shapefiles
## download victorian LGAs
if(!file.exists("VIC_LGA_POLYGON_SHP.shp")){
download.file("https://data.gov.au/data/dataset/bdf92691-c6fe-42b9-a0e2-a4cd716fa811/resource/7b6043d1-76b8-4ea9-b36b-51c61aa740d0/download/vic_lga_polygon_shp.zip",
"LGAs.zip")
unzip("LGAs.zip")
file.remove("LGAs.zip")
}
vic_lga_polygon <- readOGR(
dsn="./" ,
layer="VIC_LGA_POLYGON_SHP"
)
## get suburb polygons
if(!file.exists("VIC_LOCALITY_POLYGON_SHP.shp")){
download.file("https://data.gov.au/data/dataset/af33dd8c-0534-4e18-9245-fc64440f742e/resource/3b946968-319e-4125-8971-2a33d5bf000c/download/vic_locality_polygon_shp.zip",
"LGAs.zip")
unzip("LGAs.zip")
file.remove("LGAs.zip")
}
vic_suburb_polygon <- readOGR(
dsn="./" ,
layer="VIC_LOCALITY_POLYGON_SHP"
)
aux_polygon<-raster::intersect(melb_boundary,vic_suburb_polygon)
melb_suburb_polygon <- vic_suburb_polygon %>% filter(LOC_PID %in% aux_polygon@data$LOC_PID)
rm("aux_polygon","vic_suburb_polygon")
#postal areas from ABS
if(!file.exists("POA_2016_AUST.shp")){
download.file("https://www.abs.gov.au/ausstats/subscriber.nsf/log?openagent&1270055003_poa_2016_aust_shape.zip&1270.0.55.003&Data%20Cubes&4FB811FA48EECA7ACA25802C001432D0&0&July%202016&13.09.2016&Previous","pc.zip")
unzip("pc.zip")
file.remove("pc.zip")
}
vic_suburb_polygon <- readOGR(
dsn="./" ,
layer="POA_2016_AUST"
)
vic_suburb_polygon <- readOGR(
dsn="./" ,
layer="POA_2016_AUST"
)
vic_poas_polygon <- readOGR(
dsn="./" ,
layer="POA_2016_AUST"
)
vic_suburb_polygon <- readOGR(
dsn="./" ,
layer="VIC_LOCALITY_POLYGON_SHP"
)
plot(vic_poas_polygon)
aus_poas_polygon <- readOGR(
dsn="./" ,
layer="POA_2016_AUST"
)
rm(vic_poas_polygon)
rm(barwon_lgas_list)
### Create spatial polygons for different divisions in Victoria, Australia
# Load/Install pacman
if(!require(pacman)) install.packages("pacman", repos = "http://cran.us.r-project.org")
#use pacman to install all other packages
pacman::p_load("tidyverse","spdplyr","sp","rgdal","raster","maptools","geojsonio","rgeos","sf",
"rvest","xml2")
## get list of  councils across state
regions <- c("Greater Metropolitan Melbourne","Barwon South West","Grampians",
"Gippsland","Hume","Loddon Mallee")
wiki_page <- read_html("https://en.wikipedia.org/wiki/Local_government_areas_of_Victoria")
clean_lga <-function(df){
df %>%   mutate(LGA=str_remove(LGA,"City of"),
LGA=str_remove(LGA,"Shire of"),
LGA=str_remove(LGA,"Shire"),
LGA=str_remove(LGA,"Borough of"),
LGA=str_squish(LGA),
LGA=str_trim(LGA))
}
#table for melbourne is different....
melb_lgas_list <- wiki_page %>%
html_node(xpath="/html/body/div[3]/div[3]/div[5]/div[1]/table[1]") %>%
html_table(fill = TRUE) %>%
rename(LGA=`Local government area`,
Population=`Population (2018)[1][2]`,
Metro.Region=Region) %>%
clean_lga() %>%
dplyr::select(LGA,Population,Metro.Region) %>%
mutate(ABB_NAME=toupper(LGA),
State.Region=regions[1])
# other regions
lgas_list <- map_dfr(2:6, function(x,regions,wiki_page){
wiki_page %>%
html_node(xpath=str_c("/html/body/div[3]/div[3]/div[5]/div[1]/table[",x,"]")) %>%
html_table(fill = TRUE) %>%
.[!duplicated(as.list(.))] %>%
slice(-1) %>%
rename(LGA=`Local government area`) %>%
clean_lga() %>%
dplyr::select(LGA,Population) %>%
mutate(ABB_NAME=toupper(LGA),
State.Region=regions[x],
Metro.Region="")
},regions,wiki_page)
# put together and clean up
lgas_list <- rbind(lgas_list,melb_lgas_list)
rm(regions,melb_lgas_list,wiki_page,clean_lga)
#Download all shapefiles
## download victorian LGAs
if(!file.exists("VIC_LGA_POLYGON_SHP.shp")){
download.file("https://data.gov.au/data/dataset/bdf92691-c6fe-42b9-a0e2-a4cd716fa811/resource/7b6043d1-76b8-4ea9-b36b-51c61aa740d0/download/vic_lga_polygon_shp.zip",
"LGAs.zip")
unzip("LGAs.zip")
file.remove("LGAs.zip")
}
vic_lga_polygon <- readOGR(
dsn=path.expand("./VIC_LGA_POLYGON_SHP.shp"),
layer="VIC_LGA_POLYGON_SHP"
)
## get suburb polygons
if(!file.exists("VIC_LOCALITY_POLYGON_SHP.shp")){
download.file("https://data.gov.au/data/dataset/af33dd8c-0534-4e18-9245-fc64440f742e/resource/3b946968-319e-4125-8971-2a33d5bf000c/download/vic_locality_polygon_shp.zip",
"LGAs.zip")
unzip("LGAs.zip")
file.remove("LGAs.zip")
}
vic_suburb_polygon <- readOGR(
dsn="./VIC_LOCALITY_POLYGON_SHP.shp" ,
layer="VIC_LOCALITY_POLYGON_SHP"
)
#postal areas from ABS
if(!file.exists("POA_2016_AUST.shp")){
download.file("https://www.abs.gov.au/ausstats/subscriber.nsf/log?openagent&1270055003_poa_2016_aust_shape.zip&1270.0.55.003&Data%20Cubes&4FB811FA48EECA7ACA25802C001432D0&0&July%202016&13.09.2016&Previous","pc.zip")
unzip("pc.zip")
file.remove("pc.zip")
}
aus_poas_polygon <- readOGR(
dsn="./POA_2016_AUST.shp" ,
layer="POA_2016_AUST"
)
# convert for sf objects
vic_lga_polygon <- sf::st_as_sf(vic_lga_polygon)
vic_suburb_polygon <- sf::st_as_sf(vic_suburb_polygon)
aus_poas_polygon   <-  sf::st_as_sf(aus_poas_polygon)
# check suburb/lga crossover
sl_fully_covered <- st_covered_by(vic_suburb_polygon,vic_lga_polygon)
names(sl_fully_covered) <- vic_suburb_polygon$NAME
sl_fully_covered<-sl_fully_covered[lengths(sl_fully_covered) > 0L]
sl_fc <- tibble(suburb=character(),LGA=integer())
for(i in 1:length(sl_fully_covered)){
sl_fc <- sl_fc %>% add_row(suburb=vic_suburb_polygon[i,]$NAME,
LGA=sl_fully_covered[[i]])
}
sl_fully_covered<-as_tibble(sl_fully_covered, .name_repair = "unique")
rm(i)
sl_fully_covered <- sl_fc
rm(i,sl_fc)
View(sl_fully_covered)
sl_fully_covered <- st_covered_by(vic_suburb_polygon,vic_lga_polygon)
names(sl_fully_covered) <- vic_suburb_polygon$NAME
sl_fully_covered<-sl_fully_covered[lengths(sl_fully_covered) > 0L]
sl_fc <- tibble(suburb=character(),LGA=integer())
for(i in 1:length(sl_fully_covered)){
sl_fc <- sl_fc %>% add_row(suburb=vic_suburb_polygon[i,]$NAME,
LGA=vic_lga_polygon[sl_fully_covered[[i]],]$LGA_NAME)
}
sl_fully_covered <- sl_fc
rm(i,sl_fc)
sl_fully_covered <- st_covered_by(vic_suburb_polygon,vic_lga_polygon)
names(sl_fully_covered) <- vic_suburb_polygon$NAME
sl_fc <- tibble(suburb=character(),LGA=integer())
for(i in 1:length(sl_fully_covered)){
if(length(sl_fully_covered[i])>0)
sl_fc <- sl_fc %>% add_row(suburb=vic_suburb_polygon[i,]$NAME,
LGA=vic_lga_polygon[sl_fully_covered[[i]],]$LGA_NAME)
}
sl_fc <- tibble(suburb=character(),LGA=character())
for(i in 1:length(sl_fully_covered)){
if(length(sl_fully_covered[i])>0)
sl_fc <- sl_fc %>% add_row(suburb=vic_suburb_polygon[i,]$NAME,
LGA=vic_lga_polygon[sl_fully_covered[[i]],]$LGA_NAME)
}
View(sl_fc)
### Create spatial polygons for different divisions in Victoria, Australia
# Load/Install pacman
if(!require(pacman)) install.packages("pacman", repos = "http://cran.us.r-project.org")
#use pacman to install all other packages
pacman::p_load("tidyverse","spdplyr","sp","rgdal","raster","maptools","geojsonio","rgeos","sf",
"rvest","xml2")
## get list of  councils across state
regions <- c("Greater Metropolitan Melbourne","Barwon South West","Grampians",
"Gippsland","Hume","Loddon Mallee")
wiki_page <- read_html("https://en.wikipedia.org/wiki/Local_government_areas_of_Victoria")
clean_lga <-function(df){
df %>%   mutate(LGA=str_remove(LGA,"City of"),
LGA=str_remove(LGA,"Shire of"),
LGA=str_remove(LGA,"Shire"),
LGA=str_remove(LGA,"Borough of"),
LGA=str_squish(LGA),
LGA=str_trim(LGA))
}
#table for melbourne is different....
melb_lgas_list <- wiki_page %>%
html_node(xpath="/html/body/div[3]/div[3]/div[5]/div[1]/table[1]") %>%
html_table(fill = TRUE) %>%
rename(LGA=`Local government area`,
Population=`Population (2018)[1][2]`,
Metro.Region=Region) %>%
clean_lga() %>%
dplyr::select(LGA,Population,Metro.Region) %>%
mutate(ABB_NAME=toupper(LGA),
State.Region=regions[1])
# other regions
lgas_list <- map_dfr(2:6, function(x,regions,wiki_page){
wiki_page %>%
html_node(xpath=str_c("/html/body/div[3]/div[3]/div[5]/div[1]/table[",x,"]")) %>%
html_table(fill = TRUE) %>%
.[!duplicated(as.list(.))] %>%
slice(-1) %>%
rename(LGA=`Local government area`) %>%
clean_lga() %>%
dplyr::select(LGA,Population) %>%
mutate(ABB_NAME=toupper(LGA),
State.Region=regions[x],
Metro.Region="")
},regions,wiki_page)
# put together and clean up
lgas_list <- rbind(lgas_list,melb_lgas_list)
rm(regions,melb_lgas_list,wiki_page,clean_lga)
#Download all shapefiles
## download victorian LGAs
if(!file.exists("VIC_LGA_POLYGON_SHP.shp")){
download.file("https://data.gov.au/data/dataset/bdf92691-c6fe-42b9-a0e2-a4cd716fa811/resource/7b6043d1-76b8-4ea9-b36b-51c61aa740d0/download/vic_lga_polygon_shp.zip",
"LGAs.zip")
unzip("LGAs.zip")
file.remove("LGAs.zip")
}
vic_lga_polygon <- readOGR(
dsn=path.expand("./VIC_LGA_POLYGON_SHP.shp"),
layer="VIC_LGA_POLYGON_SHP"
)
## get suburb polygons
if(!file.exists("VIC_LOCALITY_POLYGON_SHP.shp")){
download.file("https://data.gov.au/data/dataset/af33dd8c-0534-4e18-9245-fc64440f742e/resource/3b946968-319e-4125-8971-2a33d5bf000c/download/vic_locality_polygon_shp.zip",
"LGAs.zip")
unzip("LGAs.zip")
file.remove("LGAs.zip")
}
vic_suburb_polygon <- readOGR(
dsn="./VIC_LOCALITY_POLYGON_SHP.shp" ,
layer="VIC_LOCALITY_POLYGON_SHP"
)
#postal areas from ABS
if(!file.exists("POA_2016_AUST.shp")){
download.file("https://www.abs.gov.au/ausstats/subscriber.nsf/log?openagent&1270055003_poa_2016_aust_shape.zip&1270.0.55.003&Data%20Cubes&4FB811FA48EECA7ACA25802C001432D0&0&July%202016&13.09.2016&Previous","pc.zip")
unzip("pc.zip")
file.remove("pc.zip")
}
aus_poas_polygon <- readOGR(
dsn="./POA_2016_AUST.shp" ,
layer="POA_2016_AUST"
)
# convert for sf objects
vic_lga_polygon <- sf::st_as_sf(vic_lga_polygon)
vic_suburb_polygon <- sf::st_as_sf(vic_suburb_polygon)
aus_poas_polygon   <-  sf::st_as_sf(aus_poas_polygon)
# check suburb/lga crossover
sl_fully_covered <- st_covered_by(vic_suburb_polygon,vic_lga_polygon)
names(sl_fully_covered) <- vic_suburb_polygon$NAME
#sl_fully_covered<-sl_fully_covered[lengths(sl_fully_covered) > 0L]
sl_fc <- tibble(suburb=character(),LGA=character())
for(i in 1:length(sl_fully_covered)){
if(length(sl_fully_covered[i])>0)
sl_fc <- sl_fc %>% add_row(suburb=vic_suburb_polygon[i,]$NAME,
LGA=vic_lga_polygon[sl_fully_covered[[i]],]$LGA_NAME)
}
sl_fully_covered <- sl_fc
rm(i,sl_fc)
sl_fully_covered
vic_suburb_polygon %>% filter(NAME %in% sl_fully_covered$suburb)
vic_suburb_polygon %>% filter(!(NAME %in% sl_fully_covered$suburb))
sl_in <- st_intersect(vic_suburb_polygon %>% filter(!(NAME %in% sl_fully_covered$suburb)),
vic_lga_polygon)
sl_in <- st_intersects(vic_suburb_polygon %>% filter(!(NAME %in% sl_fully_covered$suburb)),
vic_lga_polygon)
View(sl_in)
sl_in <- st_intersection(vic_suburb_polygon %>% filter(!(NAME %in% sl_fully_covered$suburb)),
vic_lga_polygon)
sl_in
sl_in %>% st_area()
install.packages("lwgeom")
pacman::p_load("tidyverse","spdplyr","sp","rgdal","raster","maptools","geojsonio","rgeos","sf",
"rvest","xml2","lwgeom")
sl_in %>% st_area()
sl_in$area <- sl_in %>% st_area()
sl_in
sl_in %>% filter(NAME=="STRATHMORE")
sl_in %>% filter(area>20) %>% cont(NAME) %>% arrange(n)
sl_in %>% filter(area>20) %>% count(NAME) %>% arrange(n)
units(20,"m^2")
units(sl_in$area)
units(20,c("m","m"))
units(20,c("m","m"))
set_units(20,c("m","m"))
attributes(sl_in$area) <- NULL
sl_in %>% filter(area>20)
sl_in %>% filter(area>20) %>% count(NAME) %>% arrange(n)
a<- sl_in %>% filter(area>20) %>% count(NAME)
View(a)
a<- sl_in %>% filter(area>100) %>% count(NAME)
a<- sl_in %>% select(NAME,area) %>% filter(area>100) %>% count(NAME)
a<- sl_in %>% dplyr::select(NAME,area) %>% filter(area>100) %>% count(NAME)
a<- sl_in %>% dplyr::select(-geometry) %>% filter(area>100) %>% count(NAME)
View(a)
View(a)
sl_in %>% filter(NAME="BULLA")
sl_in %>% filter(NAME=="BULLA")
a<- sl_in %>% dplyr::select(-geometry) %>% filter(area>10000) %>% count(NAME)
sl_in %>% filter(NAME=="BELLFIELD")
sl_in %>% filter(NAME=="SOUTH YARRA")
a<- sl_in %>% dplyr::select(-geometry) %>% filter(area>10^4) %>% count(NAME)
a
sl_in %>% filter(NAME=="BUNDOORA")
b <- sl_in %>% filter(NAME=="BUNDOORA" & LGA_NAME=="DAREBIN CITY")
b
b <- sl_in %>% filter(LGA_NAME=="DAREBIN CITY")
b <- sl_in %>% filter(LGA_NAME %in% c("DAREBIN CITY","MORELAND CITY"))
plot(b)
